webpackHotUpdate_N_E("pages/index",{

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Home; });\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ \"./node_modules/next/dist/next-server/lib/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _data_data_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/data.json */ \"./data/data.json\");\nvar _data_data_json__WEBPACK_IMPORTED_MODULE_3___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../data/data.json */ \"./data/data.json\", 1);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _use_it_event_listener__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @use-it/event-listener */ \"./node_modules/@use-it/event-listener/dist/event-listener.m.js\");\nvar _jsxFileName = \"/Users/passarellip/CODE/PERSONAL/photography/pages/index.js\",\n    _s = $RefreshSig$();\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement;\n\n\n\n\n\n\nvar capitalize = function capitalize(s) {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nvar INITIAL_ALBUM = 'home';\nvar INITIAL_ALBUM_IMAGES = _data_data_json__WEBPACK_IMPORTED_MODULE_3__.albums[0].photos;\nfunction Home() {\n  _s();\n\n  var _this = this;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])(INITIAL_ALBUM),\n      currentSection = _useState[0],\n      setCurrentSection = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])(INITIAL_ALBUM_IMAGES),\n      images = _useState2[0],\n      setImages = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])(false),\n      showThumnails = _useState3[0],\n      setShowThumbnails = _useState3[1];\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])(0),\n      imageIndex = _useState4[0],\n      setImageIndex = _useState4[1];\n\n  Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useEffect\"])(function () {\n    var currentAlbum = _data_data_json__WEBPACK_IMPORTED_MODULE_3__.albums.find(function (album) {\n      return album.category === currentSection;\n    });\n\n    if (currentAlbum) {\n      setImages(currentAlbum.photos);\n    } else {\n      // Search in travel album subcategory\n      var travelAlbum = _data_data_json__WEBPACK_IMPORTED_MODULE_3__.albums.find(function (album) {\n        return album.category === 'travel';\n      });\n\n      var _currentAlbum = travelAlbum.subcategory.find(function (album) {\n        return album.name === currentSection;\n      });\n\n      if (_currentAlbum) {\n        setImages(_currentAlbum.photos);\n      }\n    }\n  }, [currentSection]);\n\n  function handler(_ref) {\n    var key = _ref.key;\n    console.log('downHandler - imageIndex', imageIndex);\n\n    if (key === 'ArrowLeft') {\n      previousImage();\n    }\n\n    if (key === 'ArrowRight') {\n      nextImage();\n    }\n  } // https://stackoverflow.com/questions/29069639/listen-to-keypress-for-document-in-reactjs\n\n\n  Object(_use_it_event_listener__WEBPACK_IMPORTED_MODULE_5__[\"default\"])('keydown', handler);\n\n  var onImageClick = function onImageClick(index) {\n    if (index) {\n      setImageIndex(index);\n    } else if (index === 0) {\n      setImageIndex(0);\n    }\n\n    setShowThumbnails(!showThumnails);\n  };\n\n  var onToggleThumbnailsView = function onToggleThumbnailsView() {\n    setShowThumbnails(!showThumnails);\n  };\n\n  var setCurrentSectionImages = function setCurrentSectionImages(sectionName) {\n    setImageIndex(0);\n    setCurrentSection(sectionName);\n  };\n\n  var listElement = function listElement(sectionName, index) {\n    return __jsx(\"li\", {\n      key: index,\n      onClick: function onClick(e) {\n        // console.log(e.target.innerText);\n        setCurrentSectionImages(e.target.innerText.toLowerCase());\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, currentSection === sectionName ? __jsx(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 43\n      }\n    }, capitalize(sectionName)) : __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 78\n      }\n    }, capitalize(sectionName)));\n  };\n\n  var imagesList = images.map(function (image, index) {\n    return __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(\"img\", {\n      onClick: function onClick() {\n        onImageClick(index);\n      },\n      key: index,\n      className: \"photo-image thumbnails\",\n      alt: image.caption ? image.caption : '',\n      src: image.src,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }));\n  });\n\n  var previousImage = function previousImage() {\n    if (imageIndex === 0) {\n      setImageIndex(images.length - 1);\n    } else {\n      var newIndex = imageIndex - 1;\n      setImageIndex(newIndex);\n    }\n  };\n\n  var nextImage = function nextImage() {\n    var newIndex = imageIndex + 1;\n\n    if (newIndex <= images.length - 1) {\n      setImageIndex(newIndex);\n      console.log('newIndex', newIndex);\n    } else {\n      setImageIndex(0);\n    }\n  };\n\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(next_head__WEBPACK_IMPORTED_MODULE_1___default.a, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, _data_data_json__WEBPACK_IMPORTED_MODULE_3__.page.title), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  })), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {\n    id: \"2085888330\",\n    __self: this\n  }, \"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/passarellip/CODE/PERSONAL/photography/pages/index.js */\"), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {\n    id: \"1191060206\",\n    dynamic: [showThumnails ? 'white' : '#C0C0C0'],\n    __self: this\n  }, \"html,body{padding:0;margin:0;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue, sans-serif;}.title{color:#404040;}.main-wrapper{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}@media (max-width:1024.98px){.main-wrapper{padding:1em;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.photo-image{width:100% !important;}.title{margin:0px;}}@media (min-width:1024.99px){.main-wrapper{padding:3em;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;}.list.contacts{margin-top:3em;}.title{width:5em;word-wrap:break-word;}}.main-container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;max-height:90vh;}.footer{position:fixed;left:0;bottom:0;width:100%;text-align:left;padding-left:3em;background-color:white;}.side-bar{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;padding-right:1em;}.main-canvas{-webkit-box-flex:8;-webkit-flex-grow:8;-ms-flex-positive:8;flex-grow:8;overflow:scroll;max-height:90vh;}.list{list-style-type:none;padding-left:0px;cursor:pointer;}.nested-list{list-style-type:none;cursor:pointer;font-size:small;}li{padding-bottom:0.1em;}.cursor-pointer{cursor:pointer;}.list.contacts{font-size:small;}.photo-image{max-height:90%;width:auto;min-height:80%;height:auto;display:block;margin-left:auto;margin-right:auto;}.images-list-container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:space-around;-webkit-justify-content:space-around;-ms-flex-pack:space-around;justify-content:space-around;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}.thumbnails{width:30%;padding:1em;}.image-caption{text-align:center;font-size:small;}.link{-webkit-text-decoration:none;text-decoration:none;color:black;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/passarellip/CODE/PERSONAL/photography/pages/index.js */\"), __jsx(\"div\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"main-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"side-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + 'title',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, _data_data_json__WEBPACK_IMPORTED_MODULE_3__.page.author.name, \" \", _data_data_json__WEBPACK_IMPORTED_MODULE_3__.page.author.lastname), __jsx(\"div\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, __jsx(\"ul\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }, _data_data_json__WEBPACK_IMPORTED_MODULE_3__.albums.map(function (album) {\n    if (album.subcategory) {\n      var result = album.subcategory.map(function (subcategoryAlbum) {\n        return listElement(subcategoryAlbum.name);\n      });\n      return __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(\"li\", {\n        className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }\n      }, capitalize(album.category)), __jsx(\"ul\", {\n        className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"nested-list\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }\n      }, result));\n    } else {\n      return listElement(album.category);\n    }\n  })), __jsx(\"ul\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"list contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 15\n    }\n  }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {\n    href: \"https://pietropassarelli.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + 'link',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 19\n    }\n  }, \"About\", ' '))))), __jsx(\"div\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"main-canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 11\n    }\n  }, !showThumnails ? __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(\"img\", {\n    onClick: onImageClick,\n    alt: \"Responsive image\",\n    src: images[imageIndex].src,\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"photo-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  }), __jsx(\"p\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + 'image-caption',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }, \" \", images[imageIndex].caption ? images[imageIndex].caption : __jsx(\"div\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 108\n    }\n  }, \"\\xA0\"))) : __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + 'images-list-container',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, imagesList, \" \")))), __jsx(\"div\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"thumnail-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    onClick: onToggleThumbnailsView,\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + 'cursor-pointer',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  }, __jsx(\"small\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 15\n    }\n  }, \" \", showThumnails ? ' HIDE THUMBNAILS' : ' SHOW THUMBNAILS')), !showThumnails ? __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, ' ', __jsx(\"span\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }\n  }, \" \", \"| \".concat(imageIndex + 1, \"/\").concat(images.length)), __jsx(\"span\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }\n  }, ' | ', __jsx(\"small\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 19\n    }\n  }, __jsx(\"span\", {\n    onClick: previousImage,\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + 'cursor-pointer',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 21\n    }\n  }, '←'), ' ', \"/\", ' ', __jsx(\"span\", {\n    onClick: nextImage,\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1191060206\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + 'cursor-pointer',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 21\n    }\n  }, \" \\u2192\")))) : null))));\n}\n\n_s(Home, \"EeUsAXvkWOQLkNjVoJ5mbXniu2M=\", false, function () {\n  return [_use_it_event_listener__WEBPACK_IMPORTED_MODULE_5__[\"default\"]];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.js\n");

/***/ })

})