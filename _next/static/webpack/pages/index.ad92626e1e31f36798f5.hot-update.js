webpackHotUpdate_N_E("pages/index",{

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Home; });\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ \"./node_modules/next/dist/next-server/lib/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _data_data_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/data.json */ \"./data/data.json\");\nvar _data_data_json__WEBPACK_IMPORTED_MODULE_3___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../data/data.json */ \"./data/data.json\", 1);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _use_it_event_listener__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @use-it/event-listener */ \"./node_modules/@use-it/event-listener/dist/event-listener.m.js\");\n/* harmony import */ var react_awesome_lightbox__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-awesome-lightbox */ \"./node_modules/react-awesome-lightbox/build/index.js\");\n/* harmony import */ var react_awesome_lightbox__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_awesome_lightbox__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @fortawesome/react-fontawesome */ \"./node_modules/@fortawesome/react-fontawesome/index.es.js\");\n/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ \"./node_modules/@fortawesome/free-solid-svg-icons/index.es.js\");\nvar _jsxFileName = \"/Users/passarellip/CODE/PERSONAL/photography/pages/index.js\",\n    _s = $RefreshSig$();\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement;\n\n\n\n\n\n\n\n // You need to import the CSS only once\n\nvar capitalize = function capitalize(s) {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nvar INITIAL_ALBUM = 'home';\nvar INITIAL_ALBUM_IMAGES = _data_data_json__WEBPACK_IMPORTED_MODULE_3__.albums[0].photos;\nfunction Home() {\n  _s();\n\n  var _this = this;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])(INITIAL_ALBUM),\n      currentSection = _useState[0],\n      setCurrentSection = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])(INITIAL_ALBUM_IMAGES),\n      images = _useState2[0],\n      setImages = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])(false),\n      showThumnails = _useState3[0],\n      setShowThumbnails = _useState3[1];\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])(0),\n      imageIndex = _useState4[0],\n      setImageIndex = _useState4[1];\n\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])(false),\n      isLightBoxOpen = _useState5[0],\n      setLightBox = _useState5[1];\n\n  var closedLightBox = function closedLightBox() {\n    setLightBox(false);\n  };\n\n  var openLightBox = function openLightBox() {\n    setLightBox(true);\n  };\n\n  Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useEffect\"])(function () {\n    var currentAlbum = _data_data_json__WEBPACK_IMPORTED_MODULE_3__.albums.find(function (album) {\n      return album.category === currentSection;\n    });\n\n    if (currentAlbum) {\n      setImages(currentAlbum.photos);\n    } else {\n      // Search in travel album subcategory\n      var travelAlbum = _data_data_json__WEBPACK_IMPORTED_MODULE_3__.albums.find(function (album) {\n        return album.category === 'travel';\n      });\n\n      var _currentAlbum = travelAlbum.subcategory.find(function (album) {\n        return album.name === currentSection;\n      });\n\n      if (_currentAlbum) {\n        setImages(_currentAlbum.photos);\n      }\n    }\n  }, [currentSection]);\n\n  function handler(_ref) {\n    var key = _ref.key;\n    console.log('downHandler - imageIndex', imageIndex);\n\n    if (key === 'ArrowLeft') {\n      previousImage();\n    }\n\n    if (key === 'ArrowRight') {\n      nextImage();\n    }\n  } // https://stackoverflow.com/questions/29069639/listen-to-keypress-for-document-in-reactjs\n\n\n  Object(_use_it_event_listener__WEBPACK_IMPORTED_MODULE_5__[\"default\"])('keydown', handler);\n\n  var onImageClick = function onImageClick(index) {\n    if (index) {\n      setImageIndex(index);\n    } else if (index === 0) {\n      setImageIndex(0);\n    }\n\n    setShowThumbnails(!showThumnails);\n  };\n\n  var onToggleThumbnailsView = function onToggleThumbnailsView() {\n    setShowThumbnails(!showThumnails);\n  };\n\n  var setCurrentSectionImages = function setCurrentSectionImages(sectionName) {\n    setImageIndex(0);\n    setCurrentSection(sectionName);\n  };\n\n  var listElement = function listElement(sectionName, index) {\n    return __jsx(\"li\", {\n      className: 'navigationElement',\n      key: index,\n      onClick: function onClick(e) {\n        // console.log(e.target.innerText);\n        setCurrentSectionImages(e.target.innerText.toLowerCase());\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, currentSection === sectionName ? __jsx(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 43\n      }\n    }, capitalize(sectionName)) : __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 78\n      }\n    }, capitalize(sectionName)));\n  };\n\n  var imagesList = images.map(function (image, index) {\n    return __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(\"img\", {\n      onClick: function onClick() {\n        onImageClick(index);\n      },\n      key: index,\n      className: \"photo-image thumbnails\",\n      alt: image.caption ? image.caption : '',\n      src: image.src,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }));\n  });\n\n  var previousImage = function previousImage() {\n    if (imageIndex === 0) {\n      setImageIndex(images.length - 1);\n    } else {\n      var newIndex = imageIndex - 1;\n      setImageIndex(newIndex);\n    }\n  };\n\n  var nextImage = function nextImage() {\n    var newIndex = imageIndex + 1;\n\n    if (newIndex <= images.length - 1) {\n      setImageIndex(newIndex);\n      console.log('newIndex', newIndex);\n    } else {\n      setImageIndex(0);\n    }\n  };\n\n  var imagesForLightbox = images.map(function (image) {\n    return {\n      url: image.src,\n      title: image.caption\n    };\n  });\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(next_head__WEBPACK_IMPORTED_MODULE_1___default.a, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, _data_data_json__WEBPACK_IMPORTED_MODULE_3__.page.title), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  })), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {\n    id: \"2085888330\",\n    __self: this\n  }, \"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/passarellip/CODE/PERSONAL/photography/pages/index.js */\"), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {\n    id: \"892107695\",\n    dynamic: [showThumnails ? 'white' : '#C0C0C0'],\n    __self: this\n  }, \"html,body{padding:0;margin:0;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue, sans-serif;}.title{color:#404040;}.main-wrapper{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}@media (max-width:1024.98px){.main-wrapper{padding:1em;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.photo-image{width:100% !important;}.title{margin:0px;}.footer{padding-left:0.6em !important;}}@media (min-width:1024.99px){.main-wrapper{padding:3em;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;}.list.contacts{margin-top:3em;}.title{width:5em;word-wrap:break-word;}}.main-container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;max-height:90vh;}.footer{position:fixed;left:0;bottom:0;width:100%;text-align:left;padding-left:3em;background-color:white;}.side-bar{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;padding-right:1em;}.main-canvas{-webkit-box-flex:8;-webkit-flex-grow:8;-ms-flex-positive:8;flex-grow:8;overflow:scroll;max-height:90vh;background-color:white;}.list{list-style-type:none;padding-left:0px;cursor:pointer;}.nested-list{list-style-type:none;cursor:pointer;font-size:small;}li{padding-bottom:0.1em;}.cursor-pointer{cursor:pointer;}.list.contacts{font-size:small;}.photo-image{max-height:90%;width:auto;min-height:80%;height:auto;display:block;margin-left:auto;margin-right:auto;}.images-list-container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:space-around;-webkit-justify-content:space-around;-ms-flex-pack:space-around;justify-content:space-around;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}.thumbnails{width:30%;padding:1em;}.image-caption{text-align:center;font-size:small;}.link{-webkit-text-decoration:none;text-decoration:none;color:black;}.lb-container{background-color:black !important;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXNzYXJlbGxpcC9DT0RFL1BFUlNPTkFML3Bob3RvZ3JhcGh5L3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9KeUIsQUFJcUIsQUFPSSxBQUlELEFBVUMsQUFJVSxBQUlYLEFBV21CLEFBVWxCLEFBTUcsQUFHTCxBQU1DLEFBT0UsQUFhSCxBQVVBLEFBT1MsQUFNQSxBQU1BLEFBSU4sQUFJQyxBQUtELEFBV0YsQUFRSCxBQUtRLEFBS0csQUFNYSxVQWpLekIsQUEyRGMsQUF1RlgsQ0FySFosQ0FSd0IsQUE2QkgsRUEzQ3ZCLENBaURFLEFBZ0JPLEFBOENULEFBU2EsQ0FMYixFQTZCa0IsQ0FySkosRUFvR0ssQUFNRixBQU1qQixDQXpGRSxBQWdEUyxBQTBFWCxJQW5CaUIsSUF4RmYsQ0FvQkEsQUFjVyxHQThFYixBQVVBLEVBckRrQixFQU5ELEdBMEJILENBcERJLFFBK0VKLEVBOUNkLENBTkEsQUEyQmdCLEtBckRHLElBK0VuQixLQXpCbUIsSUEvQ0osQUFVRyxHQXBGbEIsQUFzRHdCLEFBeUVILENBM0RJLE1BNUJNLEdBa0ZYLEdBckNGLEdBMUVoQixRQTBERixJQXNEQSxDQXJDeUIsdUJBQ3pCLGlCQXlDaUIsRUFyRE8sT0FsRnhCLEFBK0RrQixnQkFDbEIsa0JBaEJFLGNBd0Y2Qix1QkFyREYsb0dBc0ROLEtBcERILGtCQUNwQiw4RUFvRHlCLDZHQUN6QiIsImZpbGUiOiIvVXNlcnMvcGFzc2FyZWxsaXAvQ09ERS9QRVJTT05BTC9waG90b2dyYXBoeS9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBIZWFkIGZyb20gJ25leHQvaGVhZCc7XG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IGRhdGEgZnJvbSAnLi4vZGF0YS9kYXRhLmpzb24nO1xuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlRXZlbnRMaXN0ZW5lciBmcm9tICdAdXNlLWl0L2V2ZW50LWxpc3RlbmVyJztcbmltcG9ydCBMaWdodGJveCBmcm9tICdyZWFjdC1hd2Vzb21lLWxpZ2h0Ym94JztcbmltcG9ydCB7IEZvbnRBd2Vzb21lSWNvbiB9IGZyb20gJ0Bmb3J0YXdlc29tZS9yZWFjdC1mb250YXdlc29tZSc7XG5pbXBvcnQgeyBmYUNvZmZlZSB9IGZyb20gJ0Bmb3J0YXdlc29tZS9mcmVlLXNvbGlkLXN2Zy1pY29ucyc7XG4vLyBZb3UgbmVlZCB0byBpbXBvcnQgdGhlIENTUyBvbmx5IG9uY2VcblxuY29uc3QgY2FwaXRhbGl6ZSA9IChzKSA9PiB7XG4gIGlmICh0eXBlb2YgcyAhPT0gJ3N0cmluZycpIHJldHVybiAnJztcbiAgcmV0dXJuIHMuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzLnNsaWNlKDEpO1xufTtcblxuY29uc3QgSU5JVElBTF9BTEJVTSA9ICdob21lJztcbmNvbnN0IElOSVRJQUxfQUxCVU1fSU1BR0VTID0gZGF0YS5hbGJ1bXNbMF0ucGhvdG9zO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBIb21lKCkge1xuICBjb25zdCBbY3VycmVudFNlY3Rpb24sIHNldEN1cnJlbnRTZWN0aW9uXSA9IHVzZVN0YXRlKElOSVRJQUxfQUxCVU0pO1xuICBjb25zdCBbaW1hZ2VzLCBzZXRJbWFnZXNdID0gdXNlU3RhdGUoSU5JVElBTF9BTEJVTV9JTUFHRVMpO1xuICBjb25zdCBbc2hvd1RodW1uYWlscywgc2V0U2hvd1RodW1ibmFpbHNdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbaW1hZ2VJbmRleCwgc2V0SW1hZ2VJbmRleF0gPSB1c2VTdGF0ZSgwKTtcbiAgY29uc3QgW2lzTGlnaHRCb3hPcGVuLCBzZXRMaWdodEJveF0gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgY29uc3QgY2xvc2VkTGlnaHRCb3ggPSAoKSA9PiB7XG4gICAgc2V0TGlnaHRCb3goZmFsc2UpO1xuICB9O1xuXG4gIGNvbnN0IG9wZW5MaWdodEJveCA9ICgpID0+IHtcbiAgICBzZXRMaWdodEJveCh0cnVlKTtcbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGN1cnJlbnRBbGJ1bSA9IGRhdGEuYWxidW1zLmZpbmQoKGFsYnVtKSA9PiB7XG4gICAgICByZXR1cm4gYWxidW0uY2F0ZWdvcnkgPT09IGN1cnJlbnRTZWN0aW9uO1xuICAgIH0pO1xuXG4gICAgaWYgKGN1cnJlbnRBbGJ1bSkge1xuICAgICAgc2V0SW1hZ2VzKGN1cnJlbnRBbGJ1bS5waG90b3MpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTZWFyY2ggaW4gdHJhdmVsIGFsYnVtIHN1YmNhdGVnb3J5XG4gICAgICBjb25zdCB0cmF2ZWxBbGJ1bSA9IGRhdGEuYWxidW1zLmZpbmQoKGFsYnVtKSA9PiB7XG4gICAgICAgIHJldHVybiBhbGJ1bS5jYXRlZ29yeSA9PT0gJ3RyYXZlbCc7XG4gICAgICB9KTtcbiAgICAgIGNvbnN0IGN1cnJlbnRBbGJ1bSA9IHRyYXZlbEFsYnVtLnN1YmNhdGVnb3J5LmZpbmQoKGFsYnVtKSA9PiB7XG4gICAgICAgIHJldHVybiBhbGJ1bS5uYW1lID09PSBjdXJyZW50U2VjdGlvbjtcbiAgICAgIH0pO1xuICAgICAgaWYgKGN1cnJlbnRBbGJ1bSkge1xuICAgICAgICBzZXRJbWFnZXMoY3VycmVudEFsYnVtLnBob3Rvcyk7XG4gICAgICB9XG4gICAgfVxuICB9LCBbY3VycmVudFNlY3Rpb25dKTtcblxuICBmdW5jdGlvbiBoYW5kbGVyKHsga2V5IH0pIHtcbiAgICBjb25zb2xlLmxvZygnZG93bkhhbmRsZXIgLSBpbWFnZUluZGV4JywgaW1hZ2VJbmRleCk7XG4gICAgaWYgKGtleSA9PT0gJ0Fycm93TGVmdCcpIHtcbiAgICAgIHByZXZpb3VzSW1hZ2UoKTtcbiAgICB9XG4gICAgaWYgKGtleSA9PT0gJ0Fycm93UmlnaHQnKSB7XG4gICAgICBuZXh0SW1hZ2UoKTtcbiAgICB9XG4gIH1cblxuICAvLyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8yOTA2OTYzOS9saXN0ZW4tdG8ta2V5cHJlc3MtZm9yLWRvY3VtZW50LWluLXJlYWN0anNcbiAgdXNlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGhhbmRsZXIpO1xuXG4gIGNvbnN0IG9uSW1hZ2VDbGljayA9IChpbmRleCkgPT4ge1xuICAgIGlmIChpbmRleCkge1xuICAgICAgc2V0SW1hZ2VJbmRleChpbmRleCk7XG4gICAgfSBlbHNlIGlmIChpbmRleCA9PT0gMCkge1xuICAgICAgc2V0SW1hZ2VJbmRleCgwKTtcbiAgICB9XG4gICAgc2V0U2hvd1RodW1ibmFpbHMoIXNob3dUaHVtbmFpbHMpO1xuICB9O1xuXG4gIGNvbnN0IG9uVG9nZ2xlVGh1bWJuYWlsc1ZpZXcgPSAoKSA9PiB7XG4gICAgc2V0U2hvd1RodW1ibmFpbHMoIXNob3dUaHVtbmFpbHMpO1xuICB9O1xuXG4gIGNvbnN0IHNldEN1cnJlbnRTZWN0aW9uSW1hZ2VzID0gKHNlY3Rpb25OYW1lKSA9PiB7XG4gICAgc2V0SW1hZ2VJbmRleCgwKTtcbiAgICBzZXRDdXJyZW50U2VjdGlvbihzZWN0aW9uTmFtZSk7XG4gIH07XG5cbiAgY29uc3QgbGlzdEVsZW1lbnQgPSAoc2VjdGlvbk5hbWUsIGluZGV4KSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxsaVxuICAgICAgICBjbGFzc05hbWU9eyduYXZpZ2F0aW9uRWxlbWVudCd9XG4gICAgICAgIGtleT17aW5kZXh9XG4gICAgICAgIG9uQ2xpY2s9eyhlKSA9PiB7XG4gICAgICAgICAgLy8gY29uc29sZS5sb2coZS50YXJnZXQuaW5uZXJUZXh0KTtcbiAgICAgICAgICBzZXRDdXJyZW50U2VjdGlvbkltYWdlcyhlLnRhcmdldC5pbm5lclRleHQudG9Mb3dlckNhc2UoKSk7XG4gICAgICAgIH19XG4gICAgICA+XG4gICAgICAgIHtjdXJyZW50U2VjdGlvbiA9PT0gc2VjdGlvbk5hbWUgPyA8Yj57Y2FwaXRhbGl6ZShzZWN0aW9uTmFtZSl9PC9iPiA6IDxzcGFuPntjYXBpdGFsaXplKHNlY3Rpb25OYW1lKX08L3NwYW4+fVxuICAgICAgPC9saT5cbiAgICApO1xuICB9O1xuXG4gIGNvbnN0IGltYWdlc0xpc3QgPSBpbWFnZXMubWFwKChpbWFnZSwgaW5kZXgpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgPD5cbiAgICAgICAgPGltZ1xuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgIG9uSW1hZ2VDbGljayhpbmRleCk7XG4gICAgICAgICAgfX1cbiAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgIGNsYXNzTmFtZT1cInBob3RvLWltYWdlIHRodW1ibmFpbHNcIlxuICAgICAgICAgIGFsdD17aW1hZ2UuY2FwdGlvbiA/IGltYWdlLmNhcHRpb24gOiAnJ31cbiAgICAgICAgICBzcmM9e2ltYWdlLnNyY31cbiAgICAgICAgLz5cbiAgICAgIDwvPlxuICAgICk7XG4gIH0pO1xuXG4gIGNvbnN0IHByZXZpb3VzSW1hZ2UgPSAoKSA9PiB7XG4gICAgaWYgKGltYWdlSW5kZXggPT09IDApIHtcbiAgICAgIHNldEltYWdlSW5kZXgoaW1hZ2VzLmxlbmd0aCAtIDEpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBuZXdJbmRleCA9IGltYWdlSW5kZXggLSAxO1xuICAgICAgc2V0SW1hZ2VJbmRleChuZXdJbmRleCk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IG5leHRJbWFnZSA9ICgpID0+IHtcbiAgICBjb25zdCBuZXdJbmRleCA9IGltYWdlSW5kZXggKyAxO1xuICAgIGlmIChuZXdJbmRleCA8PSBpbWFnZXMubGVuZ3RoIC0gMSkge1xuICAgICAgc2V0SW1hZ2VJbmRleChuZXdJbmRleCk7XG4gICAgICBjb25zb2xlLmxvZygnbmV3SW5kZXgnLCBuZXdJbmRleCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldEltYWdlSW5kZXgoMCk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGltYWdlc0ZvckxpZ2h0Ym94ID0gaW1hZ2VzLm1hcCgoaW1hZ2UpID0+IHtcbiAgICByZXR1cm4geyB1cmw6IGltYWdlLnNyYywgdGl0bGU6IGltYWdlLmNhcHRpb24gfTtcbiAgfSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDx0aXRsZT57ZGF0YS5wYWdlLnRpdGxlfTwvdGl0bGU+XG4gICAgICAgIDxsaW5rIHJlbD1cImljb25cIiBocmVmPVwiL2Zhdmljb24uaWNvXCIgLz5cbiAgICAgIDwvSGVhZD5cblxuICAgICAgPHN0eWxlIGpzeD57YGB9PC9zdHlsZT5cblxuICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcbiAgICAgICAgaHRtbCxcbiAgICAgICAgYm9keSB7XG4gICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgU2Vnb2UgVUksIFJvYm90bywgT3h5Z2VuLCBVYnVudHUsIENhbnRhcmVsbCwgRmlyYSBTYW5zLCBEcm9pZCBTYW5zLCBIZWx2ZXRpY2EgTmV1ZSxcbiAgICAgICAgICAgIHNhbnMtc2VyaWY7XG4gICAgICAgICAgLy8gYmFja2dyb3VuZC1jb2xvcjogJHtzaG93VGh1bW5haWxzID8gJ3doaXRlJyA6ICcjQzBDMEMwJ307XG4gICAgICAgIH1cbiAgICAgICAgLnRpdGxlIHtcbiAgICAgICAgICBjb2xvcjogIzQwNDA0MDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5tYWluLXdyYXBwZXIge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIH1cblxuICAgICAgICAvKlxuICAgICAgICAqIFRhYmxldFxuICAgICAgICAqIE1lZGl1bSBkZXZpY2VzICh0YWJsZXRzKSBcbiAgICAgICAgKi9cbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjQuOThweCkge1xuICAgICAgICAgIC8qICAgIC4uLiAgKi9cbiAgICAgICAgICAubWFpbi13cmFwcGVyIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbTtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgfVxuICAgICAgICAgIC5waG90by1pbWFnZSB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC50aXRsZSB7XG4gICAgICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvKiAgdWwubGlzdCA+IGxpIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICB9XG4gICAgICAgICAgbGkge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDFlbTtcbiAgICAgICAgICB9Ki9cblxuICAgICAgICAgIC5mb290ZXIge1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwLjZlbSAhaW1wb3J0YW50O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiAgRGVza3RvcFxuICAgICAgICAgKi9cbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjQuOTlweCkge1xuICAgICAgICAgIC8vIFRPRE86IGRvLCByZXNwb25zaXZlIHZpZXcgZm9yIG1vYmlsZS4uLlxuICAgICAgICAgIC5tYWluLXdyYXBwZXIge1xuICAgICAgICAgICAgcGFkZGluZzogM2VtO1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAubGlzdC5jb250YWN0cyB7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAzZW07XG4gICAgICAgICAgfVxuICAgICAgICAgIC50aXRsZSB7XG4gICAgICAgICAgICB3aWR0aDogNWVtO1xuICAgICAgICAgICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC5tYWluLWNvbnRhaW5lciB7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIC8vIG1pbi1oZWlnaHQ6IDkwdmg7XG4gICAgICAgICAgbWF4LWhlaWdodDogOTB2aDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5mb290ZXIge1xuICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG4gICAgICAgICAgLy8gY29sb3I6IHdoaXRlO1xuICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiAzZW07XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICAgIH1cblxuICAgICAgICAuc2lkZS1iYXIge1xuICAgICAgICAgIC8qICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjsqL1xuICAgICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgICAgICAgIC8vIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxZW07XG4gICAgICAgIH1cblxuICAgICAgICAubWFpbi1jYW52YXMge1xuICAgICAgICAgIC8qIGJhY2tncm91bmQtY29sb3I6IGJsdWU7Ki9cbiAgICAgICAgICBmbGV4LWdyb3c6IDg7XG4gICAgICAgICAgb3ZlcmZsb3c6IHNjcm9sbDtcbiAgICAgICAgICBtYXgtaGVpZ2h0OiA5MHZoO1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgICAgICB9XG5cbiAgICAgICAgLmxpc3Qge1xuICAgICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDBweDtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIH1cblxuICAgICAgICAubmVzdGVkLWxpc3Qge1xuICAgICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgZm9udC1zaXplOiBzbWFsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIGxpIHtcbiAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMC4xZW07XG4gICAgICAgIH1cblxuICAgICAgICAuY3Vyc29yLXBvaW50ZXIge1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5saXN0LmNvbnRhY3RzIHtcbiAgICAgICAgICBmb250LXNpemU6IHNtYWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgLyogVE9ETzogZG8gdGhpcyBmb3IgdmFyaW91cyBicmVhayBwb2ludHMgKi9cbiAgICAgICAgLnBob3RvLWltYWdlIHtcbiAgICAgICAgICBtYXgtaGVpZ2h0OiA5MCU7XG4gICAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgICAgbWluLWhlaWdodDogODAlO1xuICAgICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgICAvKiBjZW50ZXIgKi9cbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgICAgIH1cblxuICAgICAgICAuaW1hZ2VzLWxpc3QtY29udGFpbmVyIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBiYXNlbGluZTtcbiAgICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgICAgfVxuICAgICAgICAudGh1bWJuYWlscyB7XG4gICAgICAgICAgd2lkdGg6IDMwJTtcbiAgICAgICAgICBwYWRkaW5nOiAxZW07XG4gICAgICAgIH1cblxuICAgICAgICAuaW1hZ2UtY2FwdGlvbiB7XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGZvbnQtc2l6ZTogc21hbGw7XG4gICAgICAgIH1cblxuICAgICAgICAubGluayB7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgIGNvbG9yOiBibGFjaztcbiAgICAgICAgfVxuXG4gICAgICAgIC8qbGlnaHRib3ggb3ZlcnJpZGUgYmFja2dyb3VuZCBjb2xvciovXG4gICAgICAgIC5sYi1jb250YWluZXIge1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cblxuICAgICAgICAubGItY29udGFpbmVyIC5sYi1oZWFkZXIge1xuICAgICAgICAgIC8vIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgIC8vIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgICAgICAgLy8gY29sb3I6IGJsYWNrO1xuICAgICAgICB9XG4gICAgICAgIC8vIFRPRE86IG5lZWQgZGlmZmVyZW50IENTUyBmb3IgcG9ydHJhaXQgYW5kIGxhbmRzY2FwZSBvcmllbnRhdGlvbj9cbiAgICAgIGB9PC9zdHlsZT5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFpbi1jb250YWluZXJcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYWluLXdyYXBwZXJcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNpZGUtYmFyXCI+XG4gICAgICAgICAgICA8aDEgY2xhc3NOYW1lPXsndGl0bGUnfT5cbiAgICAgICAgICAgICAge2RhdGEucGFnZS5hdXRob3IubmFtZX0ge2RhdGEucGFnZS5hdXRob3IubGFzdG5hbWV9XG4gICAgICAgICAgICA8L2gxPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtZW51XCI+XG4gICAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJsaXN0IG5hdmlnYXRpb25cIj5cbiAgICAgICAgICAgICAgICB7ZGF0YS5hbGJ1bXMubWFwKChhbGJ1bSkgPT4ge1xuICAgICAgICAgICAgICAgICAgaWYgKGFsYnVtLnN1YmNhdGVnb3J5KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGFsYnVtLnN1YmNhdGVnb3J5Lm1hcCgoc3ViY2F0ZWdvcnlBbGJ1bSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBsaXN0RWxlbWVudChzdWJjYXRlZ29yeUFsYnVtLm5hbWUpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXsnbmF2aWdhdGlvbkVsZW1lbnQnfT57Y2FwaXRhbGl6ZShhbGJ1bS5jYXRlZ29yeSl9PC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJuZXN0ZWQtbGlzdFwiPntyZXN1bHR9PC91bD5cbiAgICAgICAgICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBsaXN0RWxlbWVudChhbGJ1bS5jYXRlZ29yeSk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJsaXN0IGNvbnRhY3RzXCI+XG4gICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cImh0dHBzOi8vcGlldHJvcGFzc2FyZWxsaS5jb21cIj5cbiAgICAgICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT17J2xpbmsnfSB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCI+XG4gICAgICAgICAgICAgICAgICAgIEFib3V0eycgJ31cbiAgICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1haW4tY2FudmFzXCI+XG4gICAgICAgICAgICB7IXNob3dUaHVtbmFpbHMgPyAoXG4gICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgPGltZyBvbkNsaWNrPXtvbkltYWdlQ2xpY2t9IGNsYXNzTmFtZT1cInBob3RvLWltYWdlXCIgYWx0PVwiUmVzcG9uc2l2ZSBpbWFnZVwiIHNyYz17aW1hZ2VzW2ltYWdlSW5kZXhdLnNyY30+PC9pbWc+XG4gICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXsnaW1hZ2UtY2FwdGlvbid9PiB7aW1hZ2VzW2ltYWdlSW5kZXhdLmNhcHRpb24gPyBpbWFnZXNbaW1hZ2VJbmRleF0uY2FwdGlvbiA6IDxkaXY+Jm5ic3A7PC9kaXY+fTwvcD5cbiAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXsnaW1hZ2VzLWxpc3QtY29udGFpbmVyJ30+e2ltYWdlc0xpc3R9IDwvZGl2PlxuICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvb3RlclwiPlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRodW1uYWlsLXRvZ2dsZVwiPlxuICAgICAgICAgICAge2lzTGlnaHRCb3hPcGVuID8gKFxuICAgICAgICAgICAgICA8TGlnaHRib3ggc3RhcnRJbmRleD17aW1hZ2VJbmRleH0gaW1hZ2VzPXtpbWFnZXNGb3JMaWdodGJveH0gb25DbG9zZT17Y2xvc2VkTGlnaHRCb3h9IGFsbG93Wm9vbT17ZmFsc2V9IGFsbG93Um90YXRlPXtmYWxzZX0gLz5cbiAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgIDxzbWFsbCBvbkNsaWNrPXtvcGVuTGlnaHRCb3h9PuKkoiB8PC9zbWFsbD5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9eydjdXJzb3ItcG9pbnRlcid9IG9uQ2xpY2s9e29uVG9nZ2xlVGh1bWJuYWlsc1ZpZXd9PlxuICAgICAgICAgICAgICA8c21hbGw+IHtzaG93VGh1bW5haWxzID8gJyBISURFIFRIVU1CTkFJTFMnIDogPEZvbnRBd2Vzb21lSWNvbiBpY29uPXtmYUNvZmZlZX0gLz59PC9zbWFsbD5cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIHshc2hvd1RodW1uYWlscyA/IChcbiAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICB7JyAnfVxuICAgICAgICAgICAgICAgIDxzcGFuPiB7YHwgJHtpbWFnZUluZGV4ICsgMX0vJHtpbWFnZXMubGVuZ3RofWB9PC9zcGFuPlxuICAgICAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgICAgeycgfCAnfVxuICAgICAgICAgICAgICAgICAgPHNtYWxsPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9eydjdXJzb3ItcG9pbnRlcid9IG9uQ2xpY2s9e3ByZXZpb3VzSW1hZ2V9PlxuICAgICAgICAgICAgICAgICAgICAgIHsn4oaQJ31cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPnsnICd9XG4gICAgICAgICAgICAgICAgICAgIC97JyAnfVxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9eydjdXJzb3ItcG9pbnRlcid9IG9uQ2xpY2s9e25leHRJbWFnZX0+XG4gICAgICAgICAgICAgICAgICAgICAge2Ag4oaSYH1cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgPC9zbWFsbD5cbiAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgKSA6IG51bGx9XG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvPlxuICApO1xufVxuIl19 */\\n/*@ sourceURL=/Users/passarellip/CODE/PERSONAL/photography/pages/index.js */\"), __jsx(\"div\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"main-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"side-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + 'title',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, _data_data_json__WEBPACK_IMPORTED_MODULE_3__.page.author.name, \" \", _data_data_json__WEBPACK_IMPORTED_MODULE_3__.page.author.lastname), __jsx(\"div\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }, __jsx(\"ul\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"list navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 15\n    }\n  }, _data_data_json__WEBPACK_IMPORTED_MODULE_3__.albums.map(function (album) {\n    if (album.subcategory) {\n      var result = album.subcategory.map(function (subcategoryAlbum) {\n        return listElement(subcategoryAlbum.name);\n      });\n      return __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(\"li\", {\n        className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + 'navigationElement',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }\n      }, capitalize(album.category)), __jsx(\"ul\", {\n        className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"nested-list\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 25\n        }\n      }, result));\n    } else {\n      return listElement(album.category);\n    }\n  })), __jsx(\"ul\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"list contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 15\n    }\n  }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {\n    href: \"https://pietropassarelli.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + 'link',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 19\n    }\n  }, \"About\", ' '))))), __jsx(\"div\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"main-canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 11\n    }\n  }, !showThumnails ? __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(\"img\", {\n    onClick: onImageClick,\n    alt: \"Responsive image\",\n    src: images[imageIndex].src,\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"photo-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 17\n    }\n  }), __jsx(\"p\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + 'image-caption',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 17\n    }\n  }, \" \", images[imageIndex].caption ? images[imageIndex].caption : __jsx(\"div\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 108\n    }\n  }, \"\\xA0\"))) : __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + 'images-list-container',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 17\n    }\n  }, imagesList, \" \")))), __jsx(\"div\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + \"thumnail-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 11\n    }\n  }, isLightBoxOpen ? __jsx(react_awesome_lightbox__WEBPACK_IMPORTED_MODULE_6___default.a, {\n    startIndex: imageIndex,\n    images: imagesForLightbox,\n    onClose: closedLightBox,\n    allowZoom: false,\n    allowRotate: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 15\n    }\n  }) : __jsx(\"small\", {\n    onClick: openLightBox,\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 15\n    }\n  }, \"\\u2922 |\"), __jsx(\"span\", {\n    onClick: onToggleThumbnailsView,\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + 'cursor-pointer',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }\n  }, __jsx(\"small\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 15\n    }\n  }, \" \", showThumnails ? ' HIDE THUMBNAILS' : __jsx(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_7__[\"FontAwesomeIcon\"], {\n    icon: _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faCoffee\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 61\n    }\n  }))), !showThumnails ? __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, ' ', __jsx(\"span\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 17\n    }\n  }, \" \", \"| \".concat(imageIndex + 1, \"/\").concat(images.length)), __jsx(\"span\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 17\n    }\n  }, ' | ', __jsx(\"small\", {\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 19\n    }\n  }, __jsx(\"span\", {\n    onClick: previousImage,\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + 'cursor-pointer',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 21\n    }\n  }, '←'), ' ', \"/\", ' ', __jsx(\"span\", {\n    onClick: nextImage,\n    className: \"jsx-2085888330 \" + styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"892107695\", [showThumnails ? 'white' : '#C0C0C0']]]) + \" \" + 'cursor-pointer',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 21\n    }\n  }, \" \\u2192\")))) : null))));\n}\n\n_s(Home, \"J0u09qX25CR2e/nZHYRsDzZxPxk=\", false, function () {\n  return [_use_it_event_listener__WEBPACK_IMPORTED_MODULE_5__[\"default\"]];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.js\n");

/***/ })

})